#
# Xin YUAN, 2019, BSD (2)
#

CMAKE_MINIMUM_REQUIRED(VERSION 3.14)

PROJECT(SQLITE)

# definitions

SET(STRING_C_FLAGS "")
IF(WIN32)
	#Windows, Unicode and disable RTTI
	SET(STRING_C_FLAGS "${STRING_C_FLAGS} -D_UNICODE /GR-")
ELSE(WIN32)
	#Linux, hide all functions
	SET(STRING_C_FLAGS "${STRING_C_FLAGS} -Wall -D_FILE_OFFSET_BITS=64 -fvisibility=hidden")
ENDIF(WIN32)

# Link flags

SET(STRING_LINK_FLAGS_TARGET "")
IF(WIN32)
	SET(STRING_LINK_FLAGS_TARGET
		"${STRING_LINK_FLAGS_TARGET} /SUBSYSTEM:WINDOWS")
ELSE(WIN32)
	SET(STRING_LINK_FLAGS_TARGET
		"${STRING_LINK_FLAGS_TARGET} -m64")
ENDIF(WIN32)

INCLUDE_DIRECTORIES(
	"${CMAKE_CURRENT_BINARY_DIR}"
	"${CMAKE_CURRENT_SOURCE_DIR}"
	)
ADD_DEFINITIONS(${STRING_C_FLAGS})

SET(LIBRARY_OUTPUT_PATH "${PROJECT_BINARY_DIR}/bin")
SET(SRC_LIST "sqlite3/shell.c"
	"sqlite3/sqlite3.c"
	)
ADD_LIBRARY(sqlite STATIC ${SRC_LIST})

SET_TARGET_PROPERTIES(sqlite PROPERTIES
	OUTPUT_NAME "sqlite"
	LINK_FLAGS "${STRING_LINK_FLAGS_TARGET}")

# end
